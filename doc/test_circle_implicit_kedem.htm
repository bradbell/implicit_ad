<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Example / Test of Implicit Wagner Class</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Example / Test of Implicit Wagner Class">
<meta name="keywords" id="keywords" content=" example / test implicit wagner class ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_test_circle_implicit_kedem_htm.js'>
</script>
</head>
<body>
<table><tr>
<td><a href="implicit_kedem.htm" target="_top">Prev</a>
</td><td><a href="implicit_newton.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>implicit_ad</option>
<option>implicit_kedem</option>
<option>test_circle_implicit_kedem</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>implicit_ad-&gt;</option>
<option>run_cmake.sh</option>
<option>utility</option>
<option>implicit_kedem</option>
<option>implicit_newton</option>
<option>control</option>
<option>time</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>implicit_kedem-&gt;</option>
<option>test_circle_implicit_kedem</option>
</select>
</td>
<td>test_circle_implicit_kedem</td>
<td>Headings</td>
</tr></table><br>
@(@\newcommand{\B}[1]{{\bf #1}}
\newcommand{\R}[1]{{\rm #1}}@)@

<center><b><big><big>Example / Test of Implicit Wagner Class</big></big></b></center>
<pre><tt><i><font color="#9A1900">//</font></i>
<i><font color="#9A1900">// simple implicit function y(x) defined by</font></i>
<i><font color="#9A1900">// 0 = L(x, y) = x^2  + y(x)^2  - 1</font></i>
<i><font color="#9A1900">//</font></i>
<b><font color="#0000FF">class</font></b> <font color="#008080">kedem_circle</font> <font color="#FF0000">{</font>
<b><font color="#0000FF">public</font></b><font color="#990000">:</font>
     <b><font color="#000000">kedem_circle</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
     <font color="#FF0000">{</font> <font color="#FF0000">}</font>
     <b><font color="#000000">VECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">function</font></b><font color="#990000">(</font><b><font color="#0000FF">const</font></b> <b><font color="#000000">VECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)&amp;</font> x<font color="#990000">)</font>
     <font color="#FF0000">{</font>    <b><font color="#000000">assert</font></b><font color="#990000">(</font> x<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> <font color="#993399">1</font> <font color="#990000">);</font>
          <b><font color="#000000">VECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">y</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">);</font>
          y<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#000000">sqrt</font></b><font color="#990000">(</font> <font color="#993399">1.0</font> <font color="#990000">-</font> x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">*</font> x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">);</font>
          <b><font color="#0000FF">return</font></b> y<font color="#990000">;</font>
     <font color="#FF0000">}</font>
     <b><font color="#000000">VECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">derivative</font></b><font color="#990000">(</font><b><font color="#0000FF">const</font></b> <b><font color="#000000">VECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)&amp;</font> x<font color="#990000">,</font> <b><font color="#0000FF">const</font></b> <b><font color="#000000">VECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)&amp;</font> y<font color="#990000">)</font>
     <font color="#FF0000">{</font>    <i><font color="#9A1900">// b = L_y (x, y)</font></i>
          <b><font color="#000000">VECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">b</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">);</font>
          b<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">2.0</font> <font color="#990000">*</font> y<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">];</font>
          <b><font color="#0000FF">return</font></b> b<font color="#990000">;</font>
     <font color="#FF0000">}</font>
     <b><font color="#000000">VECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">linear</font></b><font color="#990000">(</font><b><font color="#0000FF">const</font></b> <b><font color="#000000">VECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)&amp;</font> b<font color="#990000">,</font> <b><font color="#0000FF">const</font></b> <b><font color="#000000">VECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)&amp;</font> v<font color="#990000">)</font>
     <font color="#FF0000">{</font>    <b><font color="#000000">VECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">u</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">);</font>
          <b><font color="#000000">assert</font></b><font color="#990000">(</font> v<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> <font color="#993399">1</font> <font color="#990000">);</font>
          u<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> v<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">/</font> b<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">];</font>
          <b><font color="#0000FF">return</font></b> u<font color="#990000">;</font>
     <font color="#FF0000">}</font>
<font color="#FF0000">}</font><font color="#990000">;</font>
<font color="#009900">bool</font> <b><font color="#000000">test_cricle_implicit_kedem</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>    <font color="#009900">bool</font> ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
     <font color="#009900">double</font> eps99 <font color="#990000">=</font> <font color="#993399">99.0</font> <font color="#990000">*</font> std<font color="#990000">::</font>numeric_limits<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;::</font><b><font color="#000000">epsilon</font></b><font color="#990000">();</font>

     <i><font color="#9A1900">// record z = L(x, y)</font></i>
     <b><font color="#000000">VECTOR</font></b><font color="#990000">(</font> CppAD<font color="#990000">::</font>AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">)</font> <b><font color="#000000">axy</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">),</font> <b><font color="#000000">az</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">);</font>
     axy<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0.5</font><font color="#990000">;</font>
     axy<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0.5</font><font color="#990000">;</font>
     CppAD<font color="#990000">::</font><b><font color="#000000">Independent</font></b><font color="#990000">(</font> axy <font color="#990000">);</font>
     az<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> axy<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">*</font> axy<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">+</font> axy<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">*</font> axy<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">-</font> <font color="#993399">1.0</font><font color="#990000">;</font>
     CppAD<font color="#990000">::</font><font color="#008080">ADFun&lt;double&gt;</font> <b><font color="#000000">L_fun</font></b><font color="#990000">(</font>axy<font color="#990000">,</font> az<font color="#990000">);</font>

     <i><font color="#9A1900">// record F(x, y) = y</font></i>
     CppAD<font color="#990000">::</font><b><font color="#000000">Independent</font></b><font color="#990000">(</font> axy <font color="#990000">);</font>
     az<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> axy<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">];</font>
     CppAD<font color="#990000">::</font><font color="#008080">ADFun&lt;double&gt;</font> <b><font color="#000000">F_fun</font></b><font color="#990000">(</font>axy<font color="#990000">,</font> az<font color="#990000">);</font>

     <i><font color="#9A1900">// solver used by kedem_ad object</font></i>
     <font color="#008080">kedem_circle</font> solve<font color="#990000">;</font>

     <i><font color="#9A1900">// create implicit function object</font></i>
     <font color="#008080">implicit_kedem&lt;kedem_circle&gt;</font> <b><font color="#000000">kedem_ad</font></b><font color="#990000">(</font>L_fun<font color="#990000">,</font> F_fun<font color="#990000">,</font> solve<font color="#990000">);</font>

     <i><font color="#9A1900">// Taylor coefficient vectors</font></i>
     <b><font color="#000000">VECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">xk</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">),</font> <b><font color="#000000">yk</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">);</font>

     <i><font color="#9A1900">// zero order, y(t) = sqrt(1 - x(t) * x(t) )</font></i>
     <font color="#008080">size_t</font> k  <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
     <font color="#009900">double</font> x0 <font color="#990000">=</font> <font color="#993399">0.5</font><font color="#990000">;</font>
     xk<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font>     <font color="#990000">=</font> x0<font color="#990000">;</font>
     <font color="#009900">bool</font> store <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
     yk         <font color="#990000">=</font> kedem_ad<font color="#990000">.</font><b><font color="#000000">Forward</font></b><font color="#990000">(</font>k<font color="#990000">,</font> xk<font color="#990000">,</font> store<font color="#990000">);</font>
     <font color="#009900">double</font> y0 <font color="#990000">=</font> <b><font color="#000000">sqrt</font></b><font color="#990000">(</font><font color="#993399">1.0</font> <font color="#990000">-</font> x0 <font color="#990000">*</font> x0<font color="#990000">);</font>
     ok       <font color="#990000">&amp;=</font> CppAD<font color="#990000">::</font><b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>yk<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">],</font> y0<font color="#990000">,</font> eps99<font color="#990000">,</font> eps99<font color="#990000">);</font>

     <i><font color="#9A1900">// first order, y'(t) = - x(t) * x'(t) / sqrt(r0 - x(t) * x(t) )</font></i>
     k         <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font>
     <font color="#009900">double</font> x1 <font color="#990000">=</font> <font color="#993399">0.75</font><font color="#990000">;</font>
     xk<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font>     <font color="#990000">=</font> x1<font color="#990000">;</font>
     store     <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
     yk        <font color="#990000">=</font> kedem_ad<font color="#990000">.</font><b><font color="#000000">Forward</font></b><font color="#990000">(</font>k<font color="#990000">,</font> xk<font color="#990000">,</font> store<font color="#990000">);</font>
     <font color="#009900">double</font> y1 <font color="#990000">=</font> <font color="#990000">-</font> x0 <font color="#990000">*</font> x1 <font color="#990000">/</font> y0<font color="#990000">;</font>
     ok       <font color="#990000">&amp;=</font> CppAD<font color="#990000">::</font><b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>yk<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">],</font> y1<font color="#990000">,</font> eps99<font color="#990000">,</font> eps99<font color="#990000">);</font>

     <i><font color="#9A1900">// second order</font></i>
     <i><font color="#9A1900">// y''(t) = - x'(t) * x'(t) / sqrt(r0 - x(t) * x(t) )</font></i>
     <i><font color="#9A1900">//          - x(t) * x''(t) / sqrt(r0 - x(t) * x(t) )</font></i>
     <i><font color="#9A1900">//          - (x(t) * x'(t))^2  / sqrt(r0 - x(t) * x(t) )^3</font></i>
     k         <font color="#990000">=</font> <font color="#993399">2</font><font color="#990000">;</font>
     <font color="#009900">double</font> x2 <font color="#990000">=</font> <font color="#993399">0.25</font><font color="#990000">;</font>
     xk<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font>     <font color="#990000">=</font> x2<font color="#990000">;</font>
     store     <font color="#990000">=</font> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
     yk        <font color="#990000">=</font> kedem_ad<font color="#990000">.</font><b><font color="#000000">Forward</font></b><font color="#990000">(</font>k<font color="#990000">,</font> xk<font color="#990000">,</font> <b><font color="#0000FF">false</font></b><font color="#990000">);</font>
     <font color="#009900">double</font> y2 <font color="#990000">=</font> <font color="#990000">-</font> x1 <font color="#990000">*</font> x1 <font color="#990000">/</font> <font color="#990000">(</font><font color="#993399">2.0</font> <font color="#990000">*</font> y0<font color="#990000">);</font>
     y2       <font color="#990000">-=</font> x0 <font color="#990000">*</font> x2 <font color="#990000">/</font> y0<font color="#990000">;</font>
     y2       <font color="#990000">-=</font> <font color="#990000">(</font>x0 <font color="#990000">*</font> x1<font color="#990000">)</font> <font color="#990000">*</font> <font color="#990000">(</font>x0 <font color="#990000">*</font> x1<font color="#990000">)</font> <font color="#990000">/</font> <font color="#990000">(</font><font color="#993399">2.0</font> <font color="#990000">*</font> y0 <font color="#990000">*</font> y0 <font color="#990000">*</font> y0<font color="#990000">);</font>
     ok       <font color="#990000">&amp;=</font> CppAD<font color="#990000">::</font><b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>yk<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">],</font> y2<font color="#990000">,</font> eps99<font color="#990000">,</font> eps99<font color="#990000">);</font>
     <i><font color="#9A1900">//</font></i>
     <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>

<hr>Input File: src/implicit_kedem.cpp

</body>
</html>
