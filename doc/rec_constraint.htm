<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Record the Control Constraint as a CppAD Function Object</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Record the Control Constraint as a CppAD Function Object">
<meta name="keywords" id="keywords" content=" record the control constraint cppad function object syntax prototype l_fun j delta_t p x y l example adfun&lt;double&gt; adfun&lt; ad&lt;double&gt; &gt; ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_rec_constraint_htm.js'>
</script>
</head>
<body>
<table><tr>
<td><a href="constraint.htm" target="_top">Prev</a>
</td><td><a href="full_newton.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>implicit_ad</option>
<option>control</option>
<option>rec_constraint</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>implicit_ad-&gt;</option>
<option>run_cmake.sh</option>
<option>utility</option>
<option>implicit_kedem</option>
<option>implicit_newton</option>
<option>control</option>
<option>time</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>control-&gt;</option>
<option>vector_matrix</option>
<option>objective</option>
<option>rec_objective</option>
<option>constraint</option>
<option>rec_constraint</option>
<option>full_newton</option>
<option>implicit_solver</option>
<option>test_control_reduced_objective</option>
</select>
</td>
<td>rec_constraint</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Prototype</option>
<option>L_fun</option>
<option>---..J</option>
<option>---..delta_t</option>
<option>p</option>
<option>---..x</option>
<option>---..y</option>
<option>---..L</option>
<option>Example</option>
<option>---..ADFun&lt;double&gt;</option>
<option>---..ADFun&lt; AD&lt;double&gt; &gt;</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\B}[1]{{\bf #1}}
\newcommand{\R}[1]{{\rm #1}}@)@<center><b><big><big>Record the Control Constraint as a CppAD Function Object</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><font color="blue"><span style='white-space: nowrap'>control::rec_constraint(</span></font><i><font color="black"><span style='white-space: nowrap'>L_fun</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>J</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>delta_t</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>p</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>


<br>
<br>
<b><big><a name="Prototype" id="Prototype">Prototype</a></big></b>

<pre><tt>
<b><font color="#0000FF">template</font></b> <font color="#990000">&lt;</font><b><font color="#0000FF">class</font></b> <font color="#008080">Base</font><font color="#990000">&gt;</font> <font color="#009900">void</font>
<b><font color="#000000">rec_constraint</font></b><font color="#990000">(</font>
     CppAD<font color="#990000">::</font>ADFun<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font>             L_fun   <font color="#990000">,</font>
     <font color="#008080">size_t</font>                          J       <font color="#990000">,</font>
     <b><font color="#0000FF">const</font></b> <font color="#008080">Base</font>                      delta_t <font color="#990000">,</font>
     <b><font color="#0000FF">const</font></b> <b><font color="#000000">VECTOR</font></b><font color="#990000">(</font>Base<font color="#990000">)&amp;</font>             p       <font color="#990000">)</font></tt></pre>
<br>
<b><big><a name="L_fun" id="L_fun">L_fun</a></big></b>
<br>
The <a href="constraint.htm" target="_top"><span style='white-space: nowrap'>constraint</span></a>
 function
<small>@(@
L : \B{R}^{2 \times J} \times \B{R}^{4 \times J} \rightarrow \B{R}^{4 \times J}
@)@</small>
is stored in 
<code><i><font color="black"><span style='white-space: nowrap'>L_fun</span></font></i></code>
.
We use 
<code><i><font color="black"><span style='white-space: nowrap'>u</span></font></i></code>
 to denote an 
<code><i><font color="black"><span style='white-space: nowrap'>L_fun</span></font></i></code>

argument vector (size 
<code><i><font color="black"><span style='white-space: nowrap'>6</span></font></i><font color="blue"><span style='white-space: nowrap'>*</span></font><i><font color="black"><span style='white-space: nowrap'>J</span></font></i></code>
)
and 
<code><i><font color="black"><span style='white-space: nowrap'>v</span></font></i></code>
 a result vector (size 
<code><i><font color="black"><span style='white-space: nowrap'>4</span></font></i><font color="blue"><span style='white-space: nowrap'>*</span></font><i><font color="black"><span style='white-space: nowrap'>J</span></font></i></code>
); e.g.,

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>v</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>L_fun</span></font></i><font color="blue"><span style='white-space: nowrap'>.Forward(0,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>u</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>
<br>
<b><a name="L_fun.J" id="L_fun.J">J</a></b>
<br>
is the number of time points in the control problem.

<br>
<br>
<b><a name="L_fun.delta_t" id="L_fun.delta_t">delta_t</a></b>
<br>
is the step size between time points.

<br>
<br>
<b><big><a name="p" id="p">p</a></big></b>
<br>
Is the initial value for the state variable vector
in the control problem.

<br>
<br>
<b><a name="p.x" id="p.x">x</a></b>
<br>
For <small>@(@
i = 0, 1
@)@</small> and <small>@(@
j = 0, \ldots , J-1
@)@</small>,
<small>@[@

	u_{j * 2 + i} = x_{i,j}

@]@</small>

<br>
<br>
<b><a name="p.y" id="p.y">y</a></b>
<br>
For <small>@(@
i = 0, \ldots, 3
@)@</small> and <small>@(@
j = 0, \ldots , J-1
@)@</small>,
<small>@[@

	u_{2 * J + j * 4 + i} = y_{i,j}

@]@</small>

<br>
<br>
<b><a name="p.L" id="p.L">L</a></b>
<br>
For <small>@(@
i = 0, \ldots, 3
@)@</small> and <small>@(@
j = 0, \ldots , J-1
@)@</small>,
<small>@[@

	v_{j * 4 + i} = L_{i,j}

@]@</small>

<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>


<br>
<br>
<b><a name="Example.ADFun&lt;double&gt;" id="Example.ADFun&lt;double&gt;">ADFun&lt;double&gt;</a></b>
<br>
The following example records the constraint as an
<code><font color="blue">ADFun&lt;double&gt;</font></code> object.
<pre><tt><font color="#009900">bool</font> <b><font color="#000000">test_control_rec_constraint</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>    <font color="#009900">bool</font> ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
     <font color="#009900">double</font> eps99   <font color="#990000">=</font> <font color="#993399">99.0</font> <font color="#990000">*</font> std<font color="#990000">::</font>numeric_limits<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;::</font><b><font color="#000000">epsilon</font></b><font color="#990000">();</font>
     <i><font color="#9A1900">//</font></i>
     CppAD<font color="#990000">::</font><font color="#008080">ADFun&lt;double&gt;</font>       L_fun<font color="#990000">;</font>
     <font color="#008080">size_t</font>                     J <font color="#990000">=</font> <font color="#993399">4</font><font color="#990000">;</font>
     <font color="#009900">double</font>                     delta_t <font color="#990000">=</font> <font color="#993399">0.5</font><font color="#990000">;</font>
     <b><font color="#000000">VECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">p</font></b><font color="#990000">(</font><font color="#993399">4</font><font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> <font color="#993399">4</font><font color="#990000">;</font> i<font color="#990000">++)</font>
          p<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <font color="#009900">double</font><font color="#990000">(</font><font color="#993399">5</font> <font color="#990000">-</font> i<font color="#990000">);</font>
     control<font color="#990000">::</font><b><font color="#000000">rec_constraint</font></b><font color="#990000">(</font>L_fun<font color="#990000">,</font> J<font color="#990000">,</font> delta_t<font color="#990000">,</font> p<font color="#990000">);</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// argument values</font></i>
     <b><font color="#000000">MATRIX</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">x</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">,</font> J<font color="#990000">),</font> <b><font color="#000000">y</font></b><font color="#990000">(</font><font color="#993399">4</font><font color="#990000">,</font> J<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> <font color="#993399">4</font><font color="#990000">;</font> i<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> J<font color="#990000">;</font> j<font color="#990000">++)</font>
          <font color="#FF0000">{</font>    <b><font color="#000000">y</font></b><font color="#990000">(</font>i<font color="#990000">,</font> j<font color="#990000">)</font> <font color="#990000">=</font> <font color="#009900">double</font><font color="#990000">(</font><font color="#993399">2</font> <font color="#990000">*</font> J <font color="#990000">+</font> <font color="#993399">4</font> <font color="#990000">*</font> j <font color="#990000">+</font> i<font color="#990000">);</font>
               <b><font color="#0000FF">if</font></b><font color="#990000">(</font> i <font color="#990000">&lt;</font> <font color="#993399">2</font> <font color="#990000">)</font>
                    <b><font color="#000000">x</font></b><font color="#990000">(</font>i<font color="#990000">,</font> j<font color="#990000">)</font> <font color="#990000">=</font> <font color="#009900">double</font><font color="#990000">(</font><font color="#993399">2</font> <font color="#990000">*</font> j <font color="#990000">+</font> i<font color="#990000">);</font>
          <font color="#FF0000">}</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">// pack (x, y) into xy_vec</font></i>
     <b><font color="#000000">VECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">xy_vec</font></b><font color="#990000">(</font><font color="#993399">6</font> <font color="#990000">*</font> J<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> J<font color="#990000">;</font> j<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> <font color="#993399">2</font><font color="#990000">;</font> i<font color="#990000">++)</font>
               xy_vec<font color="#990000">[</font> j <font color="#990000">*</font> <font color="#993399">2</font> <font color="#990000">+</font> i<font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#000000">x</font></b><font color="#990000">(</font>i<font color="#990000">,</font> j<font color="#990000">);</font>
          <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> <font color="#993399">4</font><font color="#990000">;</font> i<font color="#990000">++)</font>
               xy_vec<font color="#990000">[</font> <font color="#993399">2</font> <font color="#990000">*</font> J <font color="#990000">+</font> j <font color="#990000">*</font> <font color="#993399">4</font> <font color="#990000">+</font> i<font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#000000">y</font></b><font color="#990000">(</font>i<font color="#990000">,</font> j<font color="#990000">);</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">// compute constraint function using L_fun</font></i>
     <b><font color="#000000">VECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> L_vec <font color="#990000">=</font> L_fun<font color="#990000">.</font><b><font color="#000000">Forward</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">,</font> xy_vec<font color="#990000">);</font>
     ok <font color="#990000">&amp;=</font> <b><font color="#000000">size_t</font></b><font color="#990000">(</font> L_vec<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">)</font> <font color="#990000">==</font> <font color="#993399">4</font> <font color="#990000">*</font> J<font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// unpack L_vec</font></i>
     <b><font color="#000000">MATRIX</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">L</font></b><font color="#990000">(</font><font color="#993399">4</font><font color="#990000">,</font> J<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> J<font color="#990000">;</font> j<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> <font color="#993399">4</font><font color="#990000">;</font> i<font color="#990000">++)</font>
               <b><font color="#000000">L</font></b><font color="#990000">(</font>i<font color="#990000">,</font> j<font color="#990000">)</font> <font color="#990000">=</font> L_vec<font color="#990000">[</font> j <font color="#990000">*</font> <font color="#993399">4</font> <font color="#990000">+</font> i<font color="#990000">];</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">//</font></i>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> <font color="#993399">4</font><font color="#990000">;</font> i<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <font color="#009900">double</font> check <font color="#990000">=</font> <b><font color="#000000">y</font></b><font color="#990000">(</font>i<font color="#990000">,</font> <font color="#993399">0</font><font color="#990000">)</font> <font color="#990000">-</font> p<font color="#990000">[</font>i<font color="#990000">];</font>
          ok <font color="#990000">&amp;=</font> CppAD<font color="#990000">::</font><b><font color="#000000">NearEqual</font></b><font color="#990000">(</font><b><font color="#000000">L</font></b><font color="#990000">(</font>i<font color="#990000">,</font> <font color="#993399">0</font><font color="#990000">),</font> check<font color="#990000">,</font> eps99<font color="#990000">,</font> eps99<font color="#990000">);</font>
     <font color="#FF0000">}</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> J<font color="#990000">;</font> j<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <i><font color="#9A1900">// use notation in Park2006 reference</font></i>
          <font color="#009900">double</font> u1 <font color="#990000">=</font> <b><font color="#000000">x</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">,</font>j<font color="#990000">-</font><font color="#993399">1</font><font color="#990000">);</font>
          <font color="#009900">double</font> u2 <font color="#990000">=</font> <b><font color="#000000">x</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">,</font>j<font color="#990000">-</font><font color="#993399">1</font><font color="#990000">);</font>
          <font color="#009900">double</font> x1 <font color="#990000">=</font> <b><font color="#000000">y</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">,</font>j<font color="#990000">-</font><font color="#993399">1</font><font color="#990000">);</font>
          <font color="#009900">double</font> x2 <font color="#990000">=</font> <b><font color="#000000">y</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">,</font>j<font color="#990000">-</font><font color="#993399">1</font><font color="#990000">);</font>
          <font color="#009900">double</font> x3 <font color="#990000">=</font> <b><font color="#000000">y</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">,</font>j<font color="#990000">-</font><font color="#993399">1</font><font color="#990000">);</font>
          <font color="#009900">double</font> x4 <font color="#990000">=</font> <b><font color="#000000">y</font></b><font color="#990000">(</font><font color="#993399">3</font><font color="#990000">,</font>j<font color="#990000">-</font><font color="#993399">1</font><font color="#990000">);</font>
          <font color="#009900">double</font> r  <font color="#990000">=</font> <b><font color="#000000">sqrt</font></b><font color="#990000">(</font> <font color="#990000">(</font>x1 <font color="#990000">+</font> <font color="#993399">1.0</font><font color="#990000">)</font> <font color="#990000">*</font> <font color="#990000">(</font>x1 <font color="#990000">+</font> <font color="#993399">1.0</font><font color="#990000">)</font> <font color="#990000">+</font> x2 <font color="#990000">*</font> x2 <font color="#990000">);</font>
          <font color="#009900">double</font> a  <font color="#990000">=</font> <font color="#993399">1.0</font> <font color="#990000">/</font> <font color="#990000">(</font>r <font color="#990000">*</font> r <font color="#990000">*</font> r<font color="#990000">)</font> <font color="#990000">-</font> <font color="#993399">1.0</font><font color="#990000">;</font>
          <i><font color="#9A1900">//</font></i>
          <font color="#009900">double</font> dxdt<font color="#990000">[</font><font color="#993399">4</font><font color="#990000">];</font>
          dxdt<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> x3<font color="#990000">;</font>
          dxdt<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> x4<font color="#990000">;</font>
          dxdt<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#990000">+</font> <font color="#993399">2.0</font> <font color="#990000">*</font> x4 <font color="#990000">-</font> <font color="#990000">(</font><font color="#993399">1.0</font> <font color="#990000">+</font> x1<font color="#990000">)</font> <font color="#990000">*</font> a <font color="#990000">+</font> u1<font color="#990000">;</font>
          dxdt<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#990000">-</font> <font color="#993399">2.0</font> <font color="#990000">*</font> x3 <font color="#990000">-</font>         x2 <font color="#990000">*</font> a <font color="#990000">+</font> u2<font color="#990000">;</font>
          <i><font color="#9A1900">//</font></i>
          <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> <font color="#993399">4</font><font color="#990000">;</font> i<font color="#990000">++)</font>
          <font color="#FF0000">{</font>    <font color="#009900">double</font> check <font color="#990000">=</font> <b><font color="#000000">y</font></b><font color="#990000">(</font>i<font color="#990000">,</font>j<font color="#990000">)</font> <font color="#990000">-</font> <b><font color="#000000">y</font></b><font color="#990000">(</font>i<font color="#990000">,</font>j<font color="#990000">-</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">-</font> dxdt<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">*</font> delta_t<font color="#990000">;</font>
               ok <font color="#990000">&amp;=</font> CppAD<font color="#990000">::</font><b><font color="#000000">NearEqual</font></b><font color="#990000">(</font><b><font color="#000000">L</font></b><font color="#990000">(</font>i<font color="#990000">,</font> j<font color="#990000">),</font> check<font color="#990000">,</font> eps99<font color="#990000">,</font> eps99<font color="#990000">);</font>
          <font color="#FF0000">}</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">//</font></i>
     <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>
<br>
<b><a name="Example.ADFun&lt; AD&lt;double&gt; &gt;" id="Example.ADFun&lt; AD&lt;double&gt; &gt;">ADFun&lt; AD&lt;double&gt; &gt;</a></b>
<br>
The following example records the constraint as an
<code><font color="blue">ADFun&lt; AD&lt;double&gt; &gt;</font></code> object.
<pre><tt><font color="#009900">bool</font> <b><font color="#000000">test_control_ad_rec_constraint</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>    <font color="#009900">bool</font> ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
     <font color="#009900">double</font> eps99 <font color="#990000">=</font> <font color="#993399">99.0</font> <font color="#990000">*</font> std<font color="#990000">::</font>numeric_limits<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;::</font><b><font color="#000000">epsilon</font></b><font color="#990000">();</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// ---------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">// create afun</font></i>
     <b><font color="#0000FF">typedef</font></b> CppAD<font color="#990000">::</font><font color="#008080">AD&lt;double&gt;</font> adouble<font color="#990000">;</font>
     CppAD<font color="#990000">::</font><font color="#008080">ADFun&lt;adouble&gt;</font>      afun<font color="#990000">;</font>
     <font color="#008080">size_t</font>                     J <font color="#990000">=</font> <font color="#993399">3</font><font color="#990000">;</font>
     <font color="#008080">adouble</font>                    adelta_t <font color="#990000">=</font> <font color="#993399">0.5</font><font color="#990000">;</font>
     <b><font color="#000000">VECTOR</font></b><font color="#990000">(</font>adouble<font color="#990000">)</font> <b><font color="#000000">ap</font></b><font color="#990000">(</font><font color="#993399">4</font><font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> <font color="#993399">4</font><font color="#990000">;</font> i<font color="#990000">++)</font>
          ap<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#000000">adouble</font></b><font color="#990000">(</font><font color="#993399">5</font> <font color="#990000">-</font> i<font color="#990000">);</font>
     control<font color="#990000">::</font><b><font color="#000000">rec_constraint</font></b><font color="#990000">(</font>afun<font color="#990000">,</font> J<font color="#990000">,</font> adelta_t<font color="#990000">,</font> ap<font color="#990000">);</font>
     <font color="#008080">size_t</font> m <font color="#990000">=</font> afun<font color="#990000">.</font><b><font color="#000000">Range</font></b><font color="#990000">();</font>
     <font color="#008080">size_t</font> n <font color="#990000">=</font> afun<font color="#990000">.</font><b><font color="#000000">Domain</font></b><font color="#990000">()</font> <font color="#990000">-</font> m<font color="#990000">;</font>
     <i><font color="#9A1900">// ----------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">// Create L_fun using afun</font></i>
     <b><font color="#000000">VECTOR</font></b><font color="#990000">(</font>adouble<font color="#990000">)</font> <b><font color="#000000">axy</font></b><font color="#990000">(</font>n <font color="#990000">+</font> m<font color="#990000">),</font> <b><font color="#000000">aL</font></b><font color="#990000">(</font>m<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n <font color="#990000">+</font> m<font color="#990000">;</font> i<font color="#990000">++)</font>
          axy<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#000000">adouble</font></b><font color="#990000">(</font><font color="#993399">0.0</font><font color="#990000">);</font>
     CppAD<font color="#990000">::</font><b><font color="#000000">Independent</font></b><font color="#990000">(</font> axy <font color="#990000">);</font>
     aL <font color="#990000">=</font> afun<font color="#990000">.</font><b><font color="#000000">Forward</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">,</font> axy<font color="#990000">);</font>
     CppAD<font color="#990000">::</font><font color="#008080">ADFun&lt;double&gt;</font> <b><font color="#000000">L_fun</font></b><font color="#990000">(</font>axy<font color="#990000">,</font> aL<font color="#990000">);</font>
     <i><font color="#9A1900">// ----------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">// check L_fun</font></i>
     <i><font color="#9A1900">// ----------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">// argument values</font></i>
     <b><font color="#000000">MATRIX</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">x</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">,</font> J<font color="#990000">);</font>
     <b><font color="#000000">MATRIX</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">y</font></b><font color="#990000">(</font><font color="#993399">4</font><font color="#990000">,</font> J<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> <font color="#993399">4</font><font color="#990000">;</font> i<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> J<font color="#990000">;</font> j<font color="#990000">++)</font>
          <font color="#FF0000">{</font>    <b><font color="#000000">y</font></b><font color="#990000">(</font>i<font color="#990000">,</font> j<font color="#990000">)</font> <font color="#990000">=</font> <font color="#009900">double</font><font color="#990000">(</font><font color="#993399">2</font> <font color="#990000">*</font> J <font color="#990000">+</font> <font color="#993399">4</font> <font color="#990000">*</font> j <font color="#990000">+</font> i<font color="#990000">);</font>
               <b><font color="#0000FF">if</font></b><font color="#990000">(</font> i <font color="#990000">&lt;</font> <font color="#993399">2</font> <font color="#990000">)</font>
                    <b><font color="#000000">x</font></b><font color="#990000">(</font>i<font color="#990000">,</font> j<font color="#990000">)</font> <font color="#990000">=</font> <font color="#009900">double</font><font color="#990000">(</font><font color="#993399">2</font> <font color="#990000">*</font> j <font color="#990000">+</font> i<font color="#990000">);</font>
          <font color="#FF0000">}</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">// pack (x, y) into xy_vec</font></i>
     <b><font color="#000000">VECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">xy_vec</font></b><font color="#990000">(</font><font color="#993399">6</font> <font color="#990000">*</font> J<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> J<font color="#990000">;</font> j<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> <font color="#993399">2</font><font color="#990000">;</font> i<font color="#990000">++)</font>
               xy_vec<font color="#990000">[</font> j <font color="#990000">*</font> <font color="#993399">2</font> <font color="#990000">+</font> i<font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#000000">x</font></b><font color="#990000">(</font>i<font color="#990000">,</font> j<font color="#990000">);</font>
          <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> <font color="#993399">4</font><font color="#990000">;</font> i<font color="#990000">++)</font>
               xy_vec<font color="#990000">[</font> <font color="#993399">2</font> <font color="#990000">*</font> J <font color="#990000">+</font> j <font color="#990000">*</font> <font color="#993399">4</font> <font color="#990000">+</font> i<font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#000000">y</font></b><font color="#990000">(</font>i<font color="#990000">,</font> j<font color="#990000">);</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">// compute constraint function using L_fun</font></i>
     <b><font color="#000000">VECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> L_vec <font color="#990000">=</font> L_fun<font color="#990000">.</font><b><font color="#000000">Forward</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">,</font> xy_vec<font color="#990000">);</font>
     ok <font color="#990000">&amp;=</font> <b><font color="#000000">size_t</font></b><font color="#990000">(</font> L_vec<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">)</font> <font color="#990000">==</font> <font color="#993399">4</font> <font color="#990000">*</font> J<font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// unpack L_vec</font></i>
     <b><font color="#000000">MATRIX</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">L</font></b><font color="#990000">(</font><font color="#993399">4</font><font color="#990000">,</font> J<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> J<font color="#990000">;</font> j<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> <font color="#993399">4</font><font color="#990000">;</font> i<font color="#990000">++)</font>
               <b><font color="#000000">L</font></b><font color="#990000">(</font>i<font color="#990000">,</font> j<font color="#990000">)</font> <font color="#990000">=</font> L_vec<font color="#990000">[</font> j <font color="#990000">*</font> <font color="#993399">4</font> <font color="#990000">+</font> i<font color="#990000">];</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">//</font></i>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> <font color="#993399">4</font><font color="#990000">;</font> i<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <font color="#009900">double</font> check <font color="#990000">=</font> <b><font color="#000000">y</font></b><font color="#990000">(</font>i<font color="#990000">,</font> <font color="#993399">0</font><font color="#990000">)</font> <font color="#990000">-</font> <b><font color="#000000">Value</font></b><font color="#990000">(</font>ap<font color="#990000">[</font>i<font color="#990000">]);</font>
          ok <font color="#990000">&amp;=</font> CppAD<font color="#990000">::</font><b><font color="#000000">NearEqual</font></b><font color="#990000">(</font><b><font color="#000000">L</font></b><font color="#990000">(</font>i<font color="#990000">,</font> <font color="#993399">0</font><font color="#990000">),</font> check<font color="#990000">,</font> eps99<font color="#990000">,</font> eps99<font color="#990000">);</font>
     <font color="#FF0000">}</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> J<font color="#990000">;</font> j<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <i><font color="#9A1900">// use notation in Park2006 reference</font></i>
          <font color="#009900">double</font> u1 <font color="#990000">=</font> <b><font color="#000000">x</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">,</font>j<font color="#990000">-</font><font color="#993399">1</font><font color="#990000">);</font>
          <font color="#009900">double</font> u2 <font color="#990000">=</font> <b><font color="#000000">x</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">,</font>j<font color="#990000">-</font><font color="#993399">1</font><font color="#990000">);</font>
          <font color="#009900">double</font> x1 <font color="#990000">=</font> <b><font color="#000000">y</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">,</font>j<font color="#990000">-</font><font color="#993399">1</font><font color="#990000">);</font>
          <font color="#009900">double</font> x2 <font color="#990000">=</font> <b><font color="#000000">y</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">,</font>j<font color="#990000">-</font><font color="#993399">1</font><font color="#990000">);</font>
          <font color="#009900">double</font> x3 <font color="#990000">=</font> <b><font color="#000000">y</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">,</font>j<font color="#990000">-</font><font color="#993399">1</font><font color="#990000">);</font>
          <font color="#009900">double</font> x4 <font color="#990000">=</font> <b><font color="#000000">y</font></b><font color="#990000">(</font><font color="#993399">3</font><font color="#990000">,</font>j<font color="#990000">-</font><font color="#993399">1</font><font color="#990000">);</font>
          <font color="#009900">double</font> r  <font color="#990000">=</font> <b><font color="#000000">sqrt</font></b><font color="#990000">(</font> <font color="#990000">(</font>x1 <font color="#990000">+</font> <font color="#993399">1.0</font><font color="#990000">)</font> <font color="#990000">*</font> <font color="#990000">(</font>x1 <font color="#990000">+</font> <font color="#993399">1.0</font><font color="#990000">)</font> <font color="#990000">+</font> x2 <font color="#990000">*</font> x2 <font color="#990000">);</font>
          <font color="#009900">double</font> a  <font color="#990000">=</font> <font color="#993399">1.0</font> <font color="#990000">/</font> <font color="#990000">(</font>r <font color="#990000">*</font> r <font color="#990000">*</font> r<font color="#990000">)</font> <font color="#990000">-</font> <font color="#993399">1.0</font><font color="#990000">;</font>
          <i><font color="#9A1900">//</font></i>
          <font color="#009900">double</font> dxdt<font color="#990000">[</font><font color="#993399">4</font><font color="#990000">];</font>
          dxdt<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> x3<font color="#990000">;</font>
          dxdt<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> x4<font color="#990000">;</font>
          dxdt<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#990000">+</font> <font color="#993399">2.0</font> <font color="#990000">*</font> x4 <font color="#990000">-</font> <font color="#990000">(</font><font color="#993399">1.0</font> <font color="#990000">+</font> x1<font color="#990000">)</font> <font color="#990000">*</font> a <font color="#990000">+</font> u1<font color="#990000">;</font>
          dxdt<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#990000">-</font> <font color="#993399">2.0</font> <font color="#990000">*</font> x3 <font color="#990000">-</font>         x2 <font color="#990000">*</font> a <font color="#990000">+</font> u2<font color="#990000">;</font>
          <i><font color="#9A1900">//</font></i>
          <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> <font color="#993399">4</font><font color="#990000">;</font> i<font color="#990000">++)</font>
          <font color="#FF0000">{</font>    <font color="#009900">double</font> check <font color="#990000">=</font> <b><font color="#000000">y</font></b><font color="#990000">(</font>i<font color="#990000">,</font>j<font color="#990000">)</font> <font color="#990000">-</font> <b><font color="#000000">y</font></b><font color="#990000">(</font>i<font color="#990000">,</font>j<font color="#990000">-</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">-</font> dxdt<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">*</font> <b><font color="#000000">Value</font></b><font color="#990000">(</font>adelta_t<font color="#990000">);</font>
               ok <font color="#990000">&amp;=</font> CppAD<font color="#990000">::</font><b><font color="#000000">NearEqual</font></b><font color="#990000">(</font><b><font color="#000000">L</font></b><font color="#990000">(</font>i<font color="#990000">,</font> j<font color="#990000">),</font> check<font color="#990000">,</font> eps99<font color="#990000">,</font> eps99<font color="#990000">);</font>
          <font color="#FF0000">}</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">//</font></i>
     <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>

<hr>Input File: src/control.hpp

</body>
</html>
