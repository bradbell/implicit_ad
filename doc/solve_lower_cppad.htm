<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Solve a CppAD Sparse Lower Triangular System</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Solve a CppAD Sparse Lower Triangular System">
<meta name="keywords" id="keywords" content=" solve cppad sparse lower triangular system syntax prototype x b msg example ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_solve_lower_cppad_htm.js'>
</script>
</head>
<body>
<table><tr>
<td><a href="sparse_cppad2eigen.htm" target="_top">Prev</a>
</td><td><a href="jac_constraint.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>implicit_ad</option>
<option>utility</option>
<option>solve_lower_cppad</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>implicit_ad-&gt;</option>
<option>license</option>
<option>run_cmake.sh</option>
<option>utility</option>
<option>implicit_kedem</option>
<option>implicit_newton</option>
<option>control</option>
<option>time</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>utility-&gt;</option>
<option>notation</option>
<option>norm_squared</option>
<option>join_vector</option>
<option>sparse_cppad2eigen</option>
<option>solve_lower_cppad</option>
<option>jac_constraint</option>
</select>
</td>
<td>solve_lower_cppad</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Prototype</option>
<option>A</option>
<option>x</option>
<option>b</option>
<option>msg</option>
<option>Example</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\B}[1]{{\bf #1}}
\newcommand{\R}[1]{{\rm #1}}@)@<center><b><big><big>Solve a CppAD Sparse Lower Triangular System</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><font color="blue"><span style='white-space: nowrap'>#include&nbsp;&quot;utility.hpp&quot;<br>
</span></font></code>

<code><i><font color="black"><span style='white-space: nowrap'>msg</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;solve_lower_cppad(</span></font><i><font color="black"><span style='white-space: nowrap'>A</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>b</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>


<br>
<br>
<b><big><a name="Prototype" id="Prototype">Prototype</a></big></b>

<pre><tt>
<b><font color="#0000FF">template</font></b> <font color="#990000">&lt;</font><b><font color="#0000FF">class</font></b> <font color="#008080">Scalar</font><font color="#990000">&gt;</font> std<font color="#990000">::</font>string
<b><font color="#000000">solve_lower_cppad</font></b><font color="#990000">(</font>
     <b><font color="#0000FF">const</font></b> <b><font color="#000000">CPPAD_SPARSE</font></b><font color="#990000">(</font>Scalar<font color="#990000">)&amp;</font>  A <font color="#990000">,</font>
     <b><font color="#000000">VECTOR</font></b><font color="#990000">(</font>Scalar<font color="#990000">)&amp;</font>              x <font color="#990000">,</font>
     <b><font color="#0000FF">const</font></b> <b><font color="#000000">VECTOR</font></b><font color="#990000">(</font>Scalar<font color="#990000">)&amp;</font>        b <font color="#990000">)</font></tt></pre>
<br>
<b><big><a name="A" id="A">A</a></big></b>
<br>
Is the a square lower triangular matrix in row-major order.
We use 
<code><i><font color="black"><span style='white-space: nowrap'>n</span></font></i></code>
 to denote the number for rows and columns in 
<code><i><font color="black"><span style='white-space: nowrap'>A</span></font></i></code>
;
i.e., 
<code><i><font color="black"><span style='white-space: nowrap'>n</span></font></i></code>
 is equal to both 
<code><i><font color="black"><span style='white-space: nowrap'>A</span></font></i><font color="blue"><span style='white-space: nowrap'>.nr()</span></font></code>
 and 
<code><i><font color="black"><span style='white-space: nowrap'>A</span></font></i><font color="blue"><span style='white-space: nowrap'>.nc()</span></font></code>
.

<br>
<br>
<b><big><a name="x" id="x">x</a></big></b>
<br>
This vector has size 
<code><i><font color="black"><span style='white-space: nowrap'>n</span></font></i></code>
 and satisfies the equation

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>A</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;*&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>b</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
<br>
<b><big><a name="b" id="b">b</a></big></b>
<br>
This is a vector with size 
<code><i><font color="black"><span style='white-space: nowrap'>n</span></font></i></code>
.

<br>
<br>
<b><big><a name="msg" id="msg">msg</a></big></b>
<br>
If the return value 
<code><i><font color="black"><span style='white-space: nowrap'>msg</span></font></i></code>
 is empty, no error has occurred.
Otherwise, it is one of the following

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;A&nbsp;is&nbsp;not&nbsp;in&nbsp;row-major&nbsp;order&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;A&nbsp;is&nbsp;not&nbsp;lower&nbsp;triangular&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;A&nbsp;is&nbsp;not&nbsp;invertible&quot;<br>
</span></font></code>
.

<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>

<pre><tt>
<font color="#009900">bool</font> <b><font color="#000000">test_solve_lower_cppad</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>    <font color="#009900">bool</font> ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
     <font color="#009900">double</font> eps99 <font color="#990000">=</font> <font color="#993399">99.0</font> <font color="#990000">*</font> std<font color="#990000">::</font>numeric_limits<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;::</font><b><font color="#000000">epsilon</font></b><font color="#990000">();</font>

     <i><font color="#9A1900">//     [ 1 0 0 ]</font></i>
     <i><font color="#9A1900">// A = [ 2 3 0 ]</font></i>
     <i><font color="#9A1900">//     [ 4 5 6 ]</font></i>
     <font color="#008080">size_t</font> nr  <font color="#990000">=</font> <font color="#993399">3</font><font color="#990000">;</font>
     <font color="#008080">size_t</font> nc  <font color="#990000">=</font> <font color="#993399">3</font><font color="#990000">;</font>
     <font color="#008080">size_t</font> nnz <font color="#990000">=</font> <font color="#993399">6</font><font color="#990000">;</font>
     CppAD<font color="#990000">::</font><font color="#008080">sparse_rc&lt; VECTOR(size_t) &gt;</font> <b><font color="#000000">pattern</font></b><font color="#990000">(</font>nr<font color="#990000">,</font> nc<font color="#990000">,</font> nnz<font color="#990000">);</font>
     <font color="#008080">size_t</font> k <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> nr<font color="#990000">;</font> i<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;=</font> i<font color="#990000">;</font> j<font color="#990000">++)</font>
               pattern<font color="#990000">.</font><b><font color="#000000">set</font></b><font color="#990000">(</font>k<font color="#990000">++,</font> i<font color="#990000">,</font> j<font color="#990000">);</font>
     <font color="#FF0000">}</font>
     <b><font color="#000000">assert</font></b><font color="#990000">(</font> k <font color="#990000">==</font> nnz <font color="#990000">);</font>
     <b><font color="#000000">CPPAD_SPARSE</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">A</font></b><font color="#990000">(</font>pattern<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font>k <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> k <font color="#990000">&lt;</font> nnz<font color="#990000">;</font> k<font color="#990000">++)</font>
          A<font color="#990000">.</font><b><font color="#000000">set</font></b><font color="#990000">(</font>k<font color="#990000">,</font> <font color="#009900">double</font><font color="#990000">(</font>k<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">));</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// b = [1, 8, 32]^T</font></i>
     <b><font color="#000000">VECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">b</font></b><font color="#990000">(</font>nr<font color="#990000">);</font>
     b<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">1.0</font><font color="#990000">;</font>
     b<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">8.0</font><font color="#990000">;</font>
     b<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">32.0</font><font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// solve A * x = b</font></i>
     <b><font color="#000000">VECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">x</font></b><font color="#990000">(</font>nr<font color="#990000">);</font>
     std<font color="#990000">::</font><font color="#008080">string</font> msg <font color="#990000">=</font> solve_lower_cppad<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;(</font>A<font color="#990000">,</font> x<font color="#990000">,</font> b<font color="#990000">);</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// check result</font></i>
     ok <font color="#990000">&amp;=</font> msg <font color="#990000">==</font> <font color="#FF0000">""</font><font color="#990000">;</font>
     ok <font color="#990000">&amp;=</font> CppAD<font color="#990000">::</font><b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">],</font> <font color="#993399">1.0</font><font color="#990000">,</font> eps99<font color="#990000">,</font> eps99<font color="#990000">);</font>
     ok <font color="#990000">&amp;=</font> CppAD<font color="#990000">::</font><b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">],</font> <font color="#993399">2.0</font><font color="#990000">,</font> eps99<font color="#990000">,</font> eps99<font color="#990000">);</font>
     ok <font color="#990000">&amp;=</font> CppAD<font color="#990000">::</font><b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>x<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">],</font> <font color="#993399">3.0</font><font color="#990000">,</font> eps99<font color="#990000">,</font> eps99<font color="#990000">);</font>
     <i><font color="#9A1900">//</font></i>
     <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>

<hr>Input File: src/utility.hpp

</body>
</html>
